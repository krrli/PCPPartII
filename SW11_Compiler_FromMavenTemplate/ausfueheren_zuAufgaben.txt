AdamRiese:
cd C:\Code\PCPPartII\SW11_Compiler_FromMavenTemplate
java -jar AdamRiese.jar "(1+2)*3="(stmt (expr (term (factor ( (expr (term (factor (number 1))) (addop +) (expr (term (factor (number 2))))) )) (mulop *) (term (factor (number 3))))) =)


%%%%%%%%%%%%%%%%%%%% Aufgabe 4a) %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% Postman.g4 -> satz
% gut:
der hund beisst den briefträger
der briefträger beisst den hund
den briefträger beisst der hund

% schlecht:
der Hund beisst den Briefträger
der hund beisst die katze


%%%%%%%%%%%%%%%%%%%% ausführen: ANTLR (testrig = grun) 
% see: https://github.com/antlr/antlr4/blob/master/doc/getting-started.md
cd c:\antlr\a4_postman
% generate files
antlr4 Postman.g4 	

% compiles	
javac Postman*.java

% Text
% The -tree option prints the parse tree in LISP notation.
grun Postman satz -tree saetze\1.txt

% Graphics
grun Postman satz -gui saetze\3.txt


%%%%%%%%%%%%%%%%%%%% Aufgabe 5) %%%%%%%%%%%%%%%%%%%%
%  PostmanV2.g4 -> satz
% gut:
der hund beisst den briefträger
der briefträger beisst den hund
den briefträger beisst der hund
der hund beisst die katze

% schlecht (unbekannt: Hund):
% mit 'Hund' im substantiv würds gehen.
% dann wäre noch Briefträger unbekannt.
der Hund beisst den Briefträger

%%%%%%%%%%%%%%%%%%%% ausführen: ANTLR (testrig = grun)
cd c:\antlr\a5_postman
antlr4 PostmanV2.g4
javac Postman*.java
grun PostmanV2 satz -tree c:\antlr\a4_postman\saetze\1.txt
grun PostmanV2 satz -gui c:\antlr\a4_postman\saetze\1.txt


%%%%%%%%%%%%%%%%%%%% Aufgabe 6) %%%%%%%%%%%%%%%%%%%%
% original
1+2+3-4=
(1+2)*(4-5)=
7*8+((5-2)/0)=
1+(2+(3+(4*5))))=
-1*2+(3/(4+5))=

% korrigiert (#36 1 Klammer zu viel, minus vor Zahl / negative Zahlen erlaubt)
1+2+3-4=
(1+2)*(4-5)=
7*8+((5-2)/0)=
1+(2+(3+(4*5))))=
-1*2+(3/(4+5))=

%%%%%%%%%%%%%%%%%%%% ausführen: ANTLR (testrig = grun)
cd c:\antlr\a6_adamRiese
antlr4 AdamRieseV2.g4
javac AdamRiese*.java
grun AdamRieseV2 stmt -tree ./calc/calc.txt
grun AdamRieseV2 stmt -gui ./calc/calc_correct.txt

%%%%%%%%%%%%%%%%%%%% Aufgabe 7) %%%%%%%%%%%%%%%%%%%%
Main Klasse "PrologTranslator" ausführen und Program Arguments mitgeben:

"(1+2)*3=X"
"(42+(25-3*4))/11=N"
"(24+32)/7+3*(17-15)=GA"
"34428/38-(1103-197)=UPS"

%%%%%%%%%%%%%%%%%%%% Aufgabe 8) %%%%%%%%%%%%%%%%%%%%
cd C:\antlr\a8_ArnoldC
grun ArnoldC program -gui toRun/arnoldC.txt



